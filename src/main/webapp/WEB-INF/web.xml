<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="WebApp_ID" version="3.0">

    <context-param>
      <param-name>webAppRootKey</param-name>
      <param-value>cindata_housekeeper</param-value>
    </context-param>
	<!--<filter>&lt;!&ndash; 配置过滤器，用来检查session中是否存在用户登录账号信息 &ndash;&gt;
		<filter-name>ChkSessionFilter</filter-name>
		<filter-class>com.cindata.housekeeper.web.filter.LoginFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>ChkSessionFilter</filter-name>
		<url-pattern>/rest/sys/*</url-pattern>
	</filter-mapping>-->
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
            classpath*:applicationContext.xml
        </param-value>
	</context-param>

	<filter>
		<filter-name>RequestListener</filter-name>
		<filter-class>com.cindata.housekeeper.core.listener.RequestListener</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>RequestListener</filter-name>
		<url-pattern>/rest/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>WxListener</filter-name>
		<filter-class>com.cindata.housekeeper.web.filter.WxLoginFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>WxListener</filter-name>
		<url-pattern>/rest/*</url-pattern>
	</filter-mapping>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.properties</param-value>
	</context-param>
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>60000</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<servlet>
		<servlet-name>dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath*:spring-mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>dispatcher</servlet-name>
		<url-pattern>/rest/*</url-pattern>
	</servlet-mapping>
	
	<!-- app用于验证倒链的过滤器 -->
	<filter>
		<filter-name>securityFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	
	<filter-mapping>
		<filter-name>securityFilter</filter-name>
		<url-pattern>/rest/*</url-pattern>
	</filter-mapping>
	
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
	
</web-app>